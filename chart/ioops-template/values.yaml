# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#POD Replicas
replicaCount: 1

#Deploy override
nameOverride: ""
fullnameOverride: ""

#POD Image pull secrets
imagePullSecrets:
  - name: container.registy.io

#Globa image configuration
#in case of ONE container configuration, this is how to retrieve container image.
#In case of MULTIPLE containers configuration, this are default configuration for each container to be overriten.

#Example of multiple containers configuration.
# containers:
#   - name: first #Overrite only repository
#     image:
#       repository: container.registy.io/project/image

#   - name: second #Overrite image at all
#     image:
#       repository: container.registy.io/project/image
#       tag: latest
#       pullPolicy: Always
image:
  repository: container.registy.io/project/image
  tag: latest
  pullPolicy: Always


#Global Vault configuration
# Example of vault section
# vault:
#   enabled: true
#   type: hashicorp
#   role: test-app-role #Hashcorp Kubernetes's role
#   format: keyvalue #Fomat of rendered secrets: keyvalue, export or json 
#   activeSync: false #true to keep secrets in sync. Default to false
#   secrets:
#     - store/path/to/secret1
#     - store/path/to/secret2 #Path to additional secrets
vault:
  enabled: false
  format: json

#ConfigMap
#Configure app based on either content of the file (data) or from file (loadFile) inside the 
#helm chart template.
config: {}
  # - name: sample.properties
  #   mountPath: /app/sample.properties
  #   data: |-
  #     #Sample Properties file.
  #     FOO=bar
  #     VAR1=VALUE1
  # - name: sample.xml
  #   mountPath: /app/sample-other-name.xml
  #   data: |-
  #     <note>
  #       <to>Tove</to>
  #       <from>Jani</from>
  #       <heading>Reminder</heading>
  #       <body>Don't forget me this weekend!</body>
  #     </note>
  # - name: sample.json
  #   #mountPath: /app/sample.json #No mount for this example
  #   data: |-
  #     {
  #       "key": "value"
  #     }
  # - name: sample.yaml
  #   #mountPath: /app/sample.yaml #No mount for this example
  #   data: |-
  #     hello: world
  #     planets:
  #       - earth
  #       - mars
  # - name: example-config.txt
  #   mountPath: /app/example-config.txt
  #   loadFile: example-config.txt

# Deployment service account
serviceAccount:
  create: false
  name: "builder"

#
# Container definition
# This are the sections you can specify for each container:
# - securityContext
# - image
# - imagePullPolicy
# - env
# - ports
# - livenessProbe
# - readinessProbe
# - startupProbe
# - resources
# - volumeMounts
#
containers:
  - name: skylab-app
    image: {} # Default to global image
    env: [] #D efaul to global env
    ports:
      - containerPort: 8080 # Default tcp/8080 Single container port

resources: {}
  # limits:
  #   cpu: 2
  #   memory: 2Gi
  # requests:
  #   cpu: 100m
  #   memory: 1Gi

#
# Defaults sections ONLY for first container (or single container configuration only)
# Bellow sections: resources, livenessProbe, readinessProbe, startupProbe in values only applies
# for first container (or single container configuration only).
#

livenessProbe: {}
#   failureThreshold: 1
#   httpGet:
#     path: /actuator/health
#     port: 8081
#     scheme: HTTP
#   initialDelaySeconds: 30
#   periodSeconds: 8
#   successThreshold: 1
#   timeoutSeconds: 2

readinessProbe: {}
  # failureThreshold: 1
  # httpGet:
  #   path: /actuator/health
  #   port: 8081
  #   scheme: HTTP
  # initialDelaySeconds: 60
  # periodSeconds: 3
  # successThreshold: 1
  # timeoutSeconds: 2

startupProbe: {}
#   failureThreshold: 1
#   httpGet:
#     path: /actuator/health
#     port: 8081
#     scheme: HTTP
#   initialDelaySeconds: 60
#   periodSeconds: 3
#   successThreshold: 1
#   timeoutSeconds: 2


#
# POD Relative configuration sections
#

podSecurityContext: {}

securityContext: {}

annotations: {}

nodeSelector: {}

tolerations: []

affinity: {}

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

#
# Networking configuration section
#

# route:
#   host: chart.dev.domain.com
#   path: /
#   tls:
#     keyFile: private.key #File must be exist at Helm's chart directory
#     certificateFile: certificate.pem #File must be exist at Helm's chart directory
#     caCertificateFile: ca-certificate.pem #File must be exist at Helm's chart directory

ingress: {}
#   enabled: true
#   annotations:
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#     kubernetes.io/ingress.class: "nginx"
#   hosts:
#     - host: api-global.solistica.com
#       paths: [/]
#       backend:
#         serviceName: whs-app
#         servicePort: 443

#   tls:
#     - hosts:
#         - api-global.solistica.com
#       secretName: star.solistica.com


#
# Global environment
#

# Adding env section to the root of YALM makes it replicated to 
# all containers. Each container can have their env section also.

# Example of global env:
#env:
  # - name: SPRING_REDIS_HOST
  #   valueFrom:
  #     configMapKeyRef:
  #       name: chart-config
  #       key: spring.redis.host

#Example of container only env
# containers:
#   - name: first
#     env:
#       - name: FIRST_ENV
#         value: "first container env"
#   - name: second
#     env:
#       - name: SECOND_ENV
#         value: "second container env"
# env:
#   - name: GLOBAL_ENV
#     value: "globan container env to all containers"
env: []

#
# POD Persistence
#

persistence:
  volumes: []
    # - name: config
    #   emptyDir: {}
    # - name: host-file-tmp
    #   hostPath:
    #     path: /tmp/xteve
    #     type: DirectoryOrCreate

  mounts: []
    # - name: my-nfs
    #   mountPath: /mnt/nfs-server
    # - name: config
    #   mountPath: /config
    #   readOnly: false
    # - name: host-file-tmp
    #   mountPath: /dev/shm
      
  storage: []
    # - name: my-nfs
    #   type: oc-nfs
    #   #existentPVName: pwb-nfs-server
    #   capacity: 10Gi
    #   accessMode: ReadWriteOnce
    #   server: 10.10.10.2
    #   remotePath: /shared
    #   persistentVolumeReclaimPolicy: Retain

#Horizontal Pod Autoscaller
# hpa:
#   enabled: false
#   maxReplicas: 2
#   minReplicas: 1
#   metrics:
#     - resource: memory      #Options: memory (Resource), cpu (resource)
#       type: AverageValue    #Options: Utilization, AverageValue, Value
#       target: 500Mi         #Options: Value dependent on type
#     - resource: memory
#       type: AverageValue
#       target: 500Mi
#   behavior: {}              #Behavior full Spec
#   behaviorPolicy:           #Pre-defined Behavior spec: Check documentation for options